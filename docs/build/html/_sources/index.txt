.. include:: global.rst

.. seqcap_processor documentation master file, created by
   sphinx-quickstart on Wed Mar  9 12:48:25 2016.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to seqcap_processor's documentation!
============================================


Phasing UCE data
================

In the previous step we extracted the target FASTA sequences from the assembly files, which represent UCE loci. The resulting FASTA file (e.g. ``dataset1.fasta``) contains all contig sequences of interest. However, any diploid individual may have more than one sequence at each individual UCE locus. This allelic information lies in the reads for each sample and can be recovered by allele phasing.

In this approach we use the fastq read data and map them against the recovered UCE contig sequences. This collects all the read variation at each given locus for each individual. In a subsequent step all matching reads for each locus are phased into two separate allele bins. We then create a consensus sequence of each allele bin separately and export all allele FASTA sequences into a joined FASTA library.

Separating the contig FASTA library
-----------------------------------

First we will have to split the contig FASTA file (e.g. ``dataset1.fasta``) into sample specific FASTA databases, which will serve as the sample specific templates for the following mapping. You can do this in two simple steps:

1. Deposit all sample names/IDs into a text file named ``sample_IDs.txt``. Each sample ID should occupy an individual line in the text file. This file will be used in the next step by iterating through each line and extracting all sequences containing the stated sample ID in the FASTA header inot a separate FASTA file. Make sure to use the exact sample IDs as they occur in the contig FASTA file.

.. attention:: Make sure that the sample IDs are unique. This can be tricky when having names like ``genus_species1`` and ``genus_species10``, since when searching for the former one (``genus_species1``) all sequences for both samples (``genus_species1`` and ``genus_species10``) will be returned. To avoid this it is recommendable to add an underscore after each sample ID (e.g. ``genus_species1_``).

2. Run the following command in the command line after altering the paths to the contig file (``dataset1.fasta``) and to the output fasta files (``${sample}_contigs.fasta``):

.. code-block:: bash

  for sample in $(cat sample_IDs.txt); \
      do grep $sample -A 1 /path/to/uce/taxon-set1/dataset1.fasta > /path/to/uce/taxon-set1/sample_specific/${sample}_contigs.fasta; \
      done



Creating a configuration file
-----------------------------

Before you run the script, you have to create a configuration file, telling the program where the cleaned and trimmed fastq reads are stored for each sample and where to find the contig FASTA library for each sample.
The configuration file should look like in the following example and should be saved as e.g. ``phasing.conf``::

    [references]
    genus_species1:/path/to/uce/taxon-set1/sample_specific/genus_species1_contigs.fasta
    genus_species2:/path/to/uce/taxon-set1/sample_specific/genus_species2_contigs.fasta

    [individuals]
    genus_species1:/path/to/clean-fastq/genus_species1
    genus_species2:/path/to/clean-fastq/genus_species2

    [flowcell]
    genus_species1:XXYYZZ
    genus_species2:XXYYZZ



[references]
^^^^^^^^^^^^

In this section you simply state the sample ID (``genus_species1``) followed by a colon (``:``) and the full path to the sample-specific FASTA library which was generated in the previous step.



[individuals]
^^^^^^^^^^^^^

In this section you give the complete path to the cleaned and trimmed reads folder for each sample.

.. attention:: The cleaned reads used by this program should preferably be generated by illumiprocessor_ as the folder structure of the cleaned reads files is assumed to be that of illumiprocessor_ . This means that the zipped fastq files (fastq.gz) have to be located in a subfolder with the name ``split-adapter-quality-trimmed`` within each sample-specific folder.

[flowcell]
^^^^^^^^^^


Mapping reads against contigs
-----------------------------

To map the fastq read files against the contig reference database for each sample, run:


.. code-block:: bash

    phyluce_snp_bwa_multiple_align \
        --config /path/to/phasing.conf \
        --output /path/to/mapping_results \
        --subfolder split-adapter-quality-trimmed


This will produce an output along these lines::

  2016-03-09 16:40:22,628 - phyluce_snp_bwa_multiple_align - INFO - ============ Starting phyluce_snp_bwa_multiple_align ============
  2016-03-09 16:40:22,628 - phyluce_snp_bwa_multiple_align - INFO - Version: 1.5.0
  2016-03-09 16:40:22,629 - phyluce_snp_bwa_multiple_align - INFO - Argument --config: /path/to/phasing.conf
  2016-03-09 16:40:22,629 - phyluce_snp_bwa_multiple_align - INFO - Argument --cores: 1
  2016-03-09 16:40:22,629 - phyluce_snp_bwa_multiple_align - INFO - Argument --log_path: None
  2016-03-09 16:40:22,629 - phyluce_snp_bwa_multiple_align - INFO - Argument --mem: False
  2016-03-09 16:40:22,629 - phyluce_snp_bwa_multiple_align - INFO - Argument --no_remove_duplicates: False
  2016-03-09 16:40:22,629 - phyluce_snp_bwa_multiple_align - INFO - Argument --output: /path/to/mapping_results
  2016-03-09 16:40:22,629 - phyluce_snp_bwa_multiple_align - INFO - Argument --subfolder: split-adapter-quality-trimmed
  2016-03-09 16:40:22,629 - phyluce_snp_bwa_multiple_align - INFO - Argument --verbosity: INFO
  2016-03-09 16:40:22,630 - phyluce_snp_bwa_multiple_align - INFO - ============ Starting phyluce_snp_bwa_multiple_align ============
  2016-03-09 16:40:22,631 - phyluce_snp_bwa_multiple_align - INFO - Getting input filenames and creating output directories
  2016-03-09 16:40:22,633 - phyluce_snp_bwa_multiple_align - INFO - ---------------------- Processing genus_species1 ----------------------
  2016-03-09 16:40:22,633 - phyluce_snp_bwa_multiple_align - INFO - Finding fastq/fasta files
  2016-03-09 16:40:22,636 - phyluce_snp_bwa_multiple_align - INFO - File type is fastq
  2016-03-09 16:40:22,637 - phyluce_snp_bwa_multiple_align - INFO - Creating read index file for genus_species1-READ1.fastq.gz
  2016-03-09 16:40:33,999 - phyluce_snp_bwa_multiple_align - INFO - Creating read index file for genus_species1-READ2.fastq.gz
  2016-03-09 16:40:45,142 - phyluce_snp_bwa_multiple_align - INFO - Building BAM for genus_species1
  2016-03-09 16:41:33,195 - phyluce_snp_bwa_multiple_align - INFO - Cleaning BAM for genus_species1
  2016-03-09 16:42:03,410 - phyluce_snp_bwa_multiple_align - INFO - Adding RG header to BAM for genus_species1
  2016-03-09 16:42:49,518 - phyluce_snp_bwa_multiple_align - INFO - Marking read duplicates from BAM for genus_species1
  2016-03-09 16:43:26,917 - phyluce_snp_bwa_multiple_align - INFO - Creating read index file for genus_species1-READ-singleton.fastq.gz
  2016-03-09 16:43:27,066 - phyluce_snp_bwa_multiple_align - INFO - Building BAM for genus_species1
  2016-03-09 16:43:27,293 - phyluce_snp_bwa_multiple_align - INFO - Cleaning BAM for genus_species1
  2016-03-09 16:43:27,748 - phyluce_snp_bwa_multiple_align - INFO - Adding RG header to BAM for genus_species1
  2016-03-09 16:43:28,390 - phyluce_snp_bwa_multiple_align - INFO - Marking read duplicates from BAM for genus_species1
  2016-03-09 16:43:30,633 - phyluce_snp_bwa_multiple_align - INFO - Merging BAMs for genus_species1
  2016-03-09 16:44:05,811 - phyluce_snp_bwa_multiple_align - INFO - Indexing BAM for genus_species1
  2016-03-09 16:44:08,047 - phyluce_snp_bwa_multiple_align - INFO - ---------------------- Processing genus_species2 ----------------------
  ...


Phasing mapped reads
--------------------

In the previous step you mapped the reads against the contig FASTA file for each sample. The results are stored in the output folder in bam-format. Now you can start the actual phasing of the reads. This will sort the reads within each bam file into two separate bam files (``genus_species1.0.bam`` and ``genus_species1.1.bam``).
The program is very easy to run and just requires the path to the bam files (output folder from previous mapping program, ``/path/to/mapping_results``) and the path to the configuration file, which is the same file as used in the previous step (``/path/to/phasing.conf``):

.. code-block:: bash

    phyluce_snp_phase_uces \
        --config /path/to/phasing.conf \
        --bams /path/to/mapping_results/ \
        --output /path/to/phased_reads


The output is supposed to look like this::

  2016-03-09 17:31:43,790 - phyluce_snp_phase_uces - INFO - ================ Starting phyluce_snp_phase_uces ================
  2016-03-09 17:31:43,790 - phyluce_snp_phase_uces - INFO - Version: 1.5.0
  2016-03-09 17:31:43,790 - phyluce_snp_phase_uces - INFO - Argument --bams: /path/to/mapping_results/
  2016-03-09 17:31:43,790 - phyluce_snp_phase_uces - INFO - Argument --config: /path/to/phasing.conf
  2016-03-09 17:31:43,791 - phyluce_snp_phase_uces - INFO - Argument --conservative: False
  2016-03-09 17:31:43,791 - phyluce_snp_phase_uces - INFO - Argument --cores: 1
  2016-03-09 17:31:43,791 - phyluce_snp_phase_uces - INFO - Argument --log_path: None
  2016-03-09 17:31:43,791 - phyluce_snp_phase_uces - INFO - Argument --output: /path/to/phased_reads
  2016-03-09 17:31:43,791 - phyluce_snp_phase_uces - INFO - Argument --verbosity: INFO
  2016-03-09 17:31:43,791 - phyluce_snp_phase_uces - INFO - ================ Starting phyluce_snp_phase_uces ================
  2016-03-09 17:31:43,793 - phyluce_snp_phase_uces - INFO - Getting input filenames and creating output directories
  2016-03-09 17:41:32,196 - phyluce_snp_phase_uces - INFO - ----------------------- Processing genus_species1 ----------------------
  2016-03-09 17:41:32,196 - phyluce_snp_phase_uces - INFO - Phasing BAM file for genus_species1
  2016-03-09 17:41:42,787 - phyluce_snp_phase_uces - INFO - Sorting BAM for genus_species1
  2016-03-09 17:41:44,239 - phyluce_snp_phase_uces - INFO - Sorting BAM for genus_species1
  2016-03-09 17:41:45,705 - phyluce_snp_phase_uces - INFO - Creating REF/ALT allele FASTQ file 0
  2016-03-09 17:42:02,203 - phyluce_snp_phase_uces - INFO - Creating REF/ALT allele FASTQ file 1
  2016-03-09 17:42:18,776 - phyluce_snp_phase_uces - INFO - Creating REF/ALT allele FASTQ file unphased
  2016-03-09 17:42:58,258 - phyluce_snp_phase_uces - INFO - Creating REF/ALT allele FASTA file 0 from FASTQ 0
  2016-03-09 17:42:58,273 - phyluce_snp_phase_uces - INFO - Creating REF/ALT allele FASTA file 1 from FASTQ 1
  2016-03-09 17:42:58,286 - phyluce_snp_phase_uces - INFO - Creating REF/ALT allele FASTA file unphased from FASTQ unphased
  2016-03-09 17:42:58,298 - phyluce_snp_phase_uces - INFO - Checking for correct FASTA files
  2016-03-09 17:42:58,298 - phyluce_snp_phase_uces - INFO - Cleaning FASTA files
  2016-03-09 17:42:58,475 - phyluce_snp_phase_uces - INFO - Balancing FASTA files
  2016-03-09 17:42:58,627 - phyluce_snp_phase_uces - INFO - Symlinking FASTA files
  2016-03-09 17:42:58,627 - phyluce_snp_phase_uces - INFO - ---------------------- Processing genus_species2 ---------------------
  2016-03-09 17:42:58,628 - phyluce_snp_phase_uces - INFO - Phasing BAM file for genus_species2
  2016-03-09 17:43:02,459 - phyluce_snp_phase_uces - INFO - Sorting BAM for genus_species2
  2016-03-09 17:43:03,012 - phyluce_snp_phase_uces - INFO - Sorting BAM for genus_species2
  2016-03-09 17:43:03,565 - phyluce_snp_phase_uces - INFO - Creating REF/ALT allele FASTQ file 0
  2016-03-09 17:43:11,131 - phyluce_snp_phase_uces - INFO - Creating REF/ALT allele FASTQ file 1
  2016-03-09 17:43:18,723 - phyluce_snp_phase_uces - INFO - Creating REF/ALT allele FASTQ file unphased
  2016-03-09 17:43:37,441 - phyluce_snp_phase_uces - INFO - Creating REF/ALT allele FASTA file 0 from FASTQ 0
  2016-03-09 17:43:37,454 - phyluce_snp_phase_uces - INFO - Creating REF/ALT allele FASTA file 1 from FASTQ 1
  2016-03-09 17:43:37,464 - phyluce_snp_phase_uces - INFO - Creating REF/ALT allele FASTA file unphased from FASTQ unphased
  2016-03-09 17:43:37,472 - phyluce_snp_phase_uces - INFO - Checking for correct FASTA files
  2016-03-09 17:43:37,473 - phyluce_snp_phase_uces - INFO - Cleaning FASTA files
  2016-03-09 17:43:37,633 - phyluce_snp_phase_uces - INFO - Balancing FASTA files
  2016-03-09 17:43:37,776 - phyluce_snp_phase_uces - INFO - Symlinking FASTA files
  2016-03-09 17:43:37,779 - phyluce_snp_phase_uces - INFO - ------------------ Merging alleles from all loci-----------------
  2016-03-09 17:43:38,577 - phyluce_snp_phase_uces - INFO - Wrote 819 loci for genus_species1
  2016-03-09 17:43:38,669 - phyluce_snp_phase_uces - INFO - Wrote 812 loci for genus_species2
  2016-03-09 17:43:38,675 - phyluce_snp_phase_uces - INFO - ================ Completed phyluce_snp_phase_uces ===============



The program automatically produces a consensus sequence for each of these phased bam files (= allele sequence) and stores these allele sequences of all samples in a joined FASTA file (``joined_allele_sequences_all_samples.fasta``). This allele FASTA is deposited in the subfolder ``fastas`` within your output folder (e.g. ``/path/to/phased_reads``) and can be used as input for the following alignment steps.

Aligning and trimming FASTA data
================================

With all of that out of the way, things get much easier to deal with.  Now, we
need to align our data across loci, and once we're done with that, the remaining
operations we can run on the data are format-conversions, QC steps, matrix
trimming for completeness, and any number of other fun things.

Aligning the amount of data generated by enrichment approaches is reasonably
computationally intensive - so the alignment step goes fastest if you have a
multicore machine.  You also have several alignment options available, although
I would suggest sticking with MAFFT.

.. attention:: The alignment process, as implemented by phyluce_, includes
    trimming steps that trim ragged edges and remove alignments that become to
    short following trimming.

    To turn trimming off and trim alignments using another approach, pass the
    ``--no-trim`` option.  There are also several more options related to
    trimming that you can tweak.  To view these, run
    ``phyluce_align_seqcap_align --help``.

Complete data matrix
--------------------

Alignment
^^^^^^^^^^

To align the loci, by taxon, in the FASTA file you just created, run:

.. code-block:: bash

    phyluce_align_seqcap_align \
        --fasta /path/to/uce/taxon-set1/dataset1.fasta \
        --output /path/to/uce/taxon-set1/mafft-nexus/ \
        --taxa 3 \
        --aligner mafft \
        --cores 8

.. attention:: If you pass more ``--cores`` than your machine has, you will
    receive an error.

.. note:: Here, we are accepting the default, output alignment format ("nexus").
    To change that format to something else, pass the ``--output-format`` option
    with a choice of {fasta,nexus,phylip,clustal,emboss,stockholm}.

Alignment stats
^^^^^^^^^^^^^^^

Once you have alignments, it's nice to get a general sense of their length and
composition.  You can quickly (with a multicore machine) summarize thousands of
alignments by running:

.. code-block:: bash

    phyluce_align_get_align_summary_data \
        --alignments /path/to/uce/taxon-set1/mafft-nexus/ \
        --cores 12

This will produce output that looks similar to::

    2014-04-24 17:31:15,724 - get_align_summary_data - INFO - ================ Starting get_align_summary_data ================
    2014-04-24 17:31:15,724 - get_align_summary_data - INFO - Version: git 7aec8f1
    2014-04-24 17:31:15,724 - get_align_summary_data - INFO - Argument --alignments: /path/to/uce/taxon-set1/mafft-nexus/
    2014-04-24 17:31:15,724 - get_align_summary_data - INFO - Argument --cores: 12
    2014-04-24 17:31:15,724 - get_align_summary_data - INFO - Argument --input_format: nexus
    2014-04-24 17:31:15,724 - get_align_summary_data - INFO - Argument --log_path: /path/to/uce/taxon-set1/log
    2014-04-24 17:31:15,725 - get_align_summary_data - INFO - Argument --show_taxon_counts: False
    2014-04-24 17:31:15,725 - get_align_summary_data - INFO - Argument --verbosity: INFO
    2014-04-24 17:31:15,725 - get_align_summary_data - INFO - Getting alignment files
    2014-04-24 17:31:15,729 - get_align_summary_data - INFO - Computing summary statistics using 12 cores
    2014-04-24 17:31:16,653 - get_align_summary_data - INFO - ----------------------- Alignment summary -----------------------
    2014-04-24 17:31:16,654 - get_align_summary_data - INFO - [Alignments] loci:    306
    2014-04-24 17:31:16,654 - get_align_summary_data - INFO - [Alignments] length:  223,929
    2014-04-24 17:31:16,654 - get_align_summary_data - INFO - [Alignments] mean:    731.79
    2014-04-24 17:31:16,654 - get_align_summary_data - INFO - [Alignments] 95% CI:  17.01
    2014-04-24 17:31:16,654 - get_align_summary_data - INFO - [Alignments] min:     275
    2014-04-24 17:31:16,654 - get_align_summary_data - INFO - [Alignments] max:     1,109
    2014-04-24 17:31:16,655 - get_align_summary_data - INFO - ------------------------- Taxon summary -------------------------
    2014-04-24 17:31:16,655 - get_align_summary_data - INFO - [Taxa] mean:          27.00
    2014-04-24 17:31:16,655 - get_align_summary_data - INFO - [Taxa] 95% CI:        0.00
    2014-04-24 17:31:16,656 - get_align_summary_data - INFO - [Taxa] min:           27
    2014-04-24 17:31:16,656 - get_align_summary_data - INFO - [Taxa] max:           27
    2014-04-24 17:31:16,656 - get_align_summary_data - INFO - ----------------- Missing data from trim summary ----------------
    2014-04-24 17:31:16,656 - get_align_summary_data - INFO - [Missing] mean:       7.61
    2014-04-24 17:31:16,656 - get_align_summary_data - INFO - [Missing] 95% CI:     0.24
    2014-04-24 17:31:16,656 - get_align_summary_data - INFO - [Missing] min:        1.13
    2014-04-24 17:31:16,657 - get_align_summary_data - INFO - [Missing] max:        15.79
    2014-04-24 17:31:16,661 - get_align_summary_data - INFO - -------------------- Character count summary --------------------
    2014-04-24 17:31:16,661 - get_align_summary_data - INFO - [All characters]      6,046,083
    2014-04-24 17:31:16,661 - get_align_summary_data - INFO - [Nucleotides]         4,924,129
    2014-04-24 17:31:16,661 - get_align_summary_data - INFO - ---------------- Data matrix completeness summary ---------------
    2014-04-24 17:31:16,661 - get_align_summary_data - INFO - [Matrix 50%]          306 alignments
    2014-04-24 17:31:16,661 - get_align_summary_data - INFO - [Matrix 55%]          306 alignments
    2014-04-24 17:31:16,662 - get_align_summary_data - INFO - [Matrix 60%]          306 alignments
    2014-04-24 17:31:16,662 - get_align_summary_data - INFO - [Matrix 65%]          306 alignments
    2014-04-24 17:31:16,662 - get_align_summary_data - INFO - [Matrix 70%]          306 alignments
    2014-04-24 17:31:16,662 - get_align_summary_data - INFO - [Matrix 75%]          306 alignments
    2014-04-24 17:31:16,662 - get_align_summary_data - INFO - [Matrix 80%]          306 alignments
    2014-04-24 17:31:16,662 - get_align_summary_data - INFO - [Matrix 85%]          306 alignments
    2014-04-24 17:31:16,662 - get_align_summary_data - INFO - [Matrix 90%]          306 alignments
    2014-04-24 17:31:16,662 - get_align_summary_data - INFO - [Matrix 95%]          306 alignments
    2014-04-24 17:31:16,663 - get_align_summary_data - INFO - ------------------------ Character counts -----------------------
    2014-04-24 17:31:16,663 - get_align_summary_data - INFO - [Characters] '-' is present 651,009 times
    2014-04-24 17:31:16,663 - get_align_summary_data - INFO - [Characters] '?' is present 470,945 times
    2014-04-24 17:31:16,663 - get_align_summary_data - INFO - [Characters] 'A' is present 1,386,821 times
    2014-04-24 17:31:16,663 - get_align_summary_data - INFO - [Characters] 'C' is present 1,089,729 times
    2014-04-24 17:31:16,663 - get_align_summary_data - INFO - [Characters] 'G' is present 1,094,159 times
    2014-04-24 17:31:16,663 - get_align_summary_data - INFO - [Characters] 'T' is present 1,353,420 times
    2014-04-24 17:31:16,664 - get_align_summary_data - INFO - ================ Completed get_align_summary_data ===============

Locus name removal
^^^^^^^^^^^^^^^^^^

For historical reasons, and also for users to ensure that the sequence data
aligned together are from the same loci, each sequence line in the alignment
file output by ``seqcap_align_2`` contains the ``genus_species1`` designator,
but the ``genus_species1`` designator is also prepended with the locus name
(e.g. ``uce-1005_genus_species1``).  We need to remove these if we plan to
concatenate the loci (:ref:`raxml-concat`).  More generally, it is a good idea
to remove locus names from sequence lines before running any analyses. To do
this, run:

 .. code-block:: bash

    phyluce_align_remove_locus_name_from_nexus_lines \
        --alignments /path/to/uce/taxon-set1/mafft-nexus/ \
        --output /path/to/uce/taxon-set1/mafft-nexus-clean/ \
        --taxa 3





Overview:

.. toctree::
   :maxdepth: 2



Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
